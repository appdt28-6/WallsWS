
@{
    ViewBag.Title = "Dashboard";
}
<script src="~/Content/js/Chart.min.js"></script>

    <!--market updates updates-->
<div class="market-updates">
	<div class="col-md-3 market-update-gd">
		<div class="market-update-block clr-block-1">
			<div class="col-md-12 market-update-left">
				<h3>$@ViewData["efectivo"].00</h3>
				<p>Ventas en efectivo</p>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
	<div class="col-md-3 market-update-gd">
		<div class="market-update-block clr-block-2">
			<div class="col-md-12 market-update-left">
				<h3>$@ViewData["tarjeta"].00</h3>
					<p>Ventas en tarjeta</p>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
	<div class="col-md-3 market-update-gd">
		<div class="market-update-block clr-block-3">
			<div class="col-md-8 market-update-left">
				<h3>$@ViewData["gastos"].00</h3>
				<p>Gastos</p>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
	<div class="col-md-3 market-update-gd">
		<div class="market-update-block clr-block-1">
			<div class="col-md-12 market-update-left">
				<h3>@ViewData["total"]</h3>
				<p>Total</p>
				<!-- <p>Other hand, we denounce</p>-->
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
	
</div>
<!--market updates end here--> 
<div class="clearfix"> </div>
<!--inner block start here-->
<div class="inner-block">
    <div class="chart-main-block">
        <div class="chart-first-line">

			<h3>Productos y servicios vendidos</h3>
			
	@(Html.Kendo().Grid<WallsWS.Models.vis_Get_Quanty_Product>()
	  .Name("grid")
	  .Columns(columns =>
	  {
		  columns.Bound(c => c.serv_name).Title("Servicio");
		  columns.Bound(c => c.productos).Title("Cantidad");
	  })
	  .ToolBar(toolbar =>
	  {
		  // toolbar.Create().Text("Asignar Nueva Cita");
		  toolbar.Excel().Text("");
		  toolbar.Pdf().Text("");
	  })
	  //.Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_Cobro"))
	  .Filterable()
	  .Scrollable()
	  .DataSource(dataSource => dataSource
		.Ajax()
		.Read(read => read.Action("PRODUCTOS_Read", "Dashboard"))
	  )

      )
			<br />
			<h3>Venta por Barberos</h3>

			@(Html.Kendo().Grid<WallsWS.Models.VentaBarbero>()
	  .Name("gridB")
	  .Columns(columns =>
	  {
		  columns.Bound(c => c.barbero).Title("Barbero");
		  columns.Bound(c => c.Total).Title("Total").Format("{0:C}");
	  })
	  .ToolBar(toolbar =>
	  {
		  // toolbar.Create().Text("Asignar Nueva Cita");
		  toolbar.Excel().Text("");
		  toolbar.Pdf().Text("");
	  })
	  //.Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_Cobro"))
	  .Filterable()
	  .Scrollable()
	  .DataSource(dataSource => dataSource
		.Ajax()
		.Read(read => read.Action("BARBEROS_Read", "Dashboard"))
	  )

			)
			<br />

            <div class="col-md-6 chart-blo-1">
                <div class="dygno">
                    <h2>Servicios mas Solicitados</h2>

                    <canvas id="doughnut" height="300" width="470" style="width: 470px; height: 300px;"></canvas>
                    <script>
									var doughnutData = [
									{
									    label: "Corte Caballero",
										value: 30,
										color:"#337AB7"
									},
									{
									    label: "Corte Barba",
										value : 50,
										color : "#929292"
									},
									{
                                        label:"Corte Dama",
										value : 100,
										color : "#FC8213"
									},
									{
									    label: "Servicio",
										value : 40,
										color : "#68AE00"
									},
									];
									new Chart(document.getElementById("doughnut").getContext("2d")).Doughnut(doughnutData);
                    </script>
                </div>
            </div>
            <div class="col-md-6 chart-blo-1">
                <div class="line-chart">
                    <h3>Ventas</h3>
                    <canvas id="line" height="300" width="400" style="width: 400px; height: 300px;"> </canvas>
                    <script>
                        var lineChartData = {
						labels : ["","","","","","",""],
						datasets : [
							{
								fillColor : "rgba(252, 130, 19, 0.74)",
								strokeColor : "#FC8213",
								pointColor : "#FC8213",
								pointStrokeColor : "#fff",
								data : [65,59,90,81,56,55,40]
							},
							{
								fillColor : "rgba(51, 122, 183, 0.71)",
								strokeColor : "#337AB7",
								pointColor : "#337AB7",
								pointStrokeColor : "#fff",
								data : [28,48,40,19,96,27,100]
							}
						]

					};
                       new Chart(document.getElementById("line").getContext("2d")).Line(lineChartData);

                    </script>
                </div>
            </div>
            <div class="clearfix"> </div>
        </div>
        <div class="chart-second-line">
            <div class="col-md-6 chart-blo-1">
                <div class="polararea">
                    <h3>Grafica Ejemplo</h3>
                    <canvas id="polarArea" height="300" width="300" style="width: 300px; height: 300px;"></canvas>
                    <script>
					var chartData = [
						{
							value : Math.random(),
							color: "#FC8213"
						},
						{
							value : Math.random(),
							color: "#68AE00"
						},
						{
							value : Math.random(),
							color: "#337AB7"
						},
						{
							value : Math.random(),
							color: "#FC8213"
						},
						{
							value : Math.random(),
							color: "#68AE00"
						},
						{
							value : Math.random(),
							color: "#337AB7"
						}
					];
					new Chart(document.getElementById("polarArea").getContext("2d")).PolarArea(chartData);
                    </script>
                </div>
            </div>
            <div class="col-md-6 chart-blo-1">
                <div class="chart-other">
                    <h3>Grafica Ejemplo</h3>
                    <canvas id="pie" height="315" width="470" style="width: 470px; height: 315px;"></canvas>
                    <script>
									var pieData = [
										{
											value: 30,
											color:"#337AB7"
										},
										{
											value : 50,
											color : "#FC8213"
										},
										{
											value : 100,
											color : "#8BC34A"
										}

									];
									new Chart(document.getElementById("pie").getContext("2d")).Pie(pieData);
                    </script>
                </div>
            </div>
            <div class="clearfix"> </div>
        </div>
    </div>
</div>
<!--inner block end here-->
